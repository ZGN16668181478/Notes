列表：能存储任意多个有序的数据，能存储对象的对象，能存储各种类型对象,是一个可变对象
    创建：通过[] 创建,一般取名取复数
    元素：列表存储的元素
    len()函数：获取列表长度   eg:len(list_name)
    索引：从零开始，通过索引获取为负数时，表示从后往前数。即倒数第几个
    切片：获取指定的元素  列表[起始:结束:步长]  这里的起始和结束都是索引
        1.获取时，包括起始位，不包括结束位置。
        2.不会影响原来的列表
        3.eg:stus[1:2] stus[:2] stus[1:] stus[:]
    步长:表示的是每次获取元素的间隔，默认为1
        1.可以为负数，但不能为零，eg:步长-1即倒序
        2.eg:stus[1:6:3]
    常用：*、+(运算操作)、in(检查是否在列表内)、not in、len()、min、max、
        方法：必须通过对象.方法()的形式来进行调用。
        两个方法：index、count   eg:s.index()返回元素的索引
序列：可变序列与不可变序列(序列内容不可变)
            1.在给切片进行赋值时，只能使用序列
            2.del:删除元素。  元素的替换，插入操作，切片替换、删除元素、修改列表
            3.常用方法：
                元素的插入：append(value)：列表最后添加一个元素
                           insert(index,value)：向列表指定位置添加一个元素。
                元素的扩展：extend(value)：使用新的序列来拓展当前序列。添加到最后
                清空序列：clear()
                删除元素：pop(index)：根据索引删除元素并返回被删除的元素
                         remove(key):删除指定元素,若相同元素多个,默认删除第一个
                反转列表：reverse()
                元素排序：sort()
            4.range函数：range(begin,end,步长)默认步长为1，起始为0,，即range(end)
    5.元组(不可变):至少要有一个元素和一个半角符,有无括号关系不大。除了不能进行修改，其他和列表一样  eg:my_tuple()
            6.解包(unpack,序列都可以运用):my_tuple = a,b  b,a=a,b
            7.a=[1,23]属于赋值(即修改变量)，a[0]=1属于修改(即修改对象)，b=a b[0]=2 此时a=b
            8.== != 比较的是value,而is  is not比较的是地址、id
    6.字典(dict):eg:dit{key:value},value为任意对象,key为不可变对象(str,int,bool,tuple..)，键值不能重复,否则后面项会替换前面项。键值对即为一项(item)。字典的查询能力比列表强。
        1>.字典的三种创建方式:
            1.使用{}
            2.dict()函数,每一个参数都是一个键值对.eg:dict(key=value）key都是字符串
            3.将一个双值子序列的序列转成字典.eg:dict([(key,value),(key2,value2)])
        2>.字典中几个常用函数和方法:
            len():获取键值对的个数
            in/not in:检查键是否包含
            获取值: 
            d[key]
            d.get(key,default):存在返回value,不存在时，有default返回default，没有则返回None
            修改字典:d.setdefault（key,value）,如果存在key，不进行修改。都返回key对应的value
                    d.update(d1):如果key重复，则添加的进行覆盖原来
            删除字典:d.popitem():随机删除一项，一般是最后一项。返回key-value的元组，即(key,value)
                    d.pop(key[,default]):根据key删除该项，返回value，若不存在则抛出异常，
                    d.clear():直接将字典清空。
            复制字典：copy：用于对字典的浅复制。
                eg:d = {'a':{'name':'wanna','age',10},'b':10}  d2 = d.copy()
                d2['a']['name']='hhh',则都会改变
                像这种有两层及以上的复制,都会发生改变。一层的则复制后再赋值不会对彼此产生影响。
    7.集合： 元素为不可变类型，不能修改。元素不重复
            创建：{}和s=set()，只能通过set创建空集合。
            len()  in  not in
            添加元素：s.add(value)
            添加集合：s.update(s2)
            删除    ：s.pop(),随机删除并返回元素
                     s.remove(value):删除指定元素
                     s.clear():清空集合
            复制集合：copy()，浅复制
            运算   ：交集(&) 并集(|) 差集(-) 异或集(^)取并集之外的部分) 
                    a<=b(a是b子集,b是a的超集) a<b(a是b的真子集,b是a的真超集) 

